runs:
  using: "composite"
  steps:
    - name: Checkout the repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0              # <-- unshallow so we can pull/rebase

    - name: Run PowerShell script
      shell: pwsh
      env:
        PROJECT_NAMES: ${{ inputs.project_names }}
      run: |
        $VerboseFlag = if ('${{ inputs.verbose }}' -eq 'true') { '-Verbose' } else { '' }
        & $env:GITHUB_ACTION_PATH/update-readme.ps1 `
          -ProjectName '${{ inputs.project_name }}' `
          -ProjectNames "$env:PROJECT_NAMES" `
          -RootPath '${{ github.workspace }}' `
          -GithubOwner '${{ inputs.github_owner }}' `
          -GithubRepo '${{ inputs.github_repo }}' `
          $VerboseFlag

    - name: Commit and push updated README.md
      shell: bash
      run: |
        set -e

        branch="${GITHUB_REF_NAME:-main}"

        git config --global user.name 'GitHub Actions'
        git config --global user.email 'actions@github.com'

        git add README.md
        # don't fail if there's nothing to commit
        git commit -m "Update README with badges" || echo "No changes to commit"

        # make sure we can rebase (unshallow if needed)
        git fetch --prune --unshallow || true
        git fetch origin "$branch"

        # rebase our commit(s) on top of the remote branch; if nothing to rebase, it's fine
        git pull --rebase origin "$branch" || {
          echo "Rebase failed (likely no local commits or conflict)."
          # if a rebase was started and failed due to no commits, abort safely
          git rebase --abort 2>/dev/null || true
        }

        # push; if nothing changed, don't fail the job
        git push origin HEAD:"$branch" || echo "No changes to push"
